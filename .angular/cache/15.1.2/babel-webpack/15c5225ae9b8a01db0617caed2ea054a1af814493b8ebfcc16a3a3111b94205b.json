{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@auth0/angular-jwt\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  }),\n  params: new HttpParams()\n};\nexport class AuthService {\n  //private URL = 'http://localhost:3000';\n  constructor(http, jwtHelper) {\n    this.http = http;\n    this.jwtHelper = jwtHelper;\n    this.URL = 'https://e13-production.up.railway.app';\n  }\n  login(nombre, contraseña) {\n    return this.http.post(`${this.URL}/login`, {\n      nombre,\n      contraseña\n    });\n  }\n  register(nombre, contraseña) {\n    return this.http.post(`${this.URL}/register`, {\n      nombre,\n      contraseña\n    });\n  }\n  cal_dmg(tipo1A, tipo2A, tipo1D, tipo2D, power, moveType, statsA, statsD, cat) {\n    return this.http.post(`${this.URL}/damage`, {\n      tipo1A,\n      tipo2A,\n      tipo1D,\n      tipo2D,\n      power,\n      moveType,\n      statsA,\n      statsD,\n      cat\n    });\n  }\n  save_team(id, equipo) {\n    if (this.isAuth()) {\n      let cookies = document.cookie.split(';');\n      let token = cookies.find(cookie => cookie.startsWith(\" token=\"));\n      token = token.substring(7);\n      httpOptions.headers = httpOptions.headers.set('Authorization', `Bearer ${token}`);\n      httpOptions.params = httpOptions.params.set('id', id);\n      return this.http.patch(`${this.URL}/usuario`, {\n        equipo\n      }, httpOptions);\n    } else {\n      return null;\n    }\n  }\n  isAuth() {\n    let cookies = document.cookie.split(';');\n    let token = cookies.find(cookie => cookie.startsWith(\" token=\"));\n    if (token == undefined) {\n      return false;\n    } else {\n      token = token.substring(7);\n    }\n    if (token == \"\" || this.jwtHelper.isTokenExpired(token)) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.JwtHelperService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}